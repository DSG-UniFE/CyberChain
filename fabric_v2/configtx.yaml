# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/papernet.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &OrgGw1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrgGw1MSP

        # ID to load the MSP definition as
        ID: OrgGw1MSP

        MSPDir: crypto-config/peerOrganizations/orgGw1.papernet.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw1MSP.admin', 'OrgGw1MSP.peer', 'OrgGw1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw1MSP.admin', 'OrgGw1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw1MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw1MSP.peer')"

        # leave this flag set to true.
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.orgGw1.papernet.com
              Port: 7051


    - &OrgGw2
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrgGw2MSP

        # ID to load the MSP definition as
        ID: OrgGw2MSP

        MSPDir: crypto-config/peerOrganizations/orgGw2.papernet.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw2MSP.admin', 'OrgGw2MSP.peer', 'OrgGw2MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw2MSP.admin', 'OrgGw2MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw2MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw2MSP.peer')"

        # leave this flag set to true.
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.orgGw2.papernet.com
              Port: 8051


    - &OrgGw3
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrgGw3MSP

        # ID to load the MSP definition as
        ID: OrgGw3MSP

        MSPDir: crypto-config/peerOrganizations/orgGw3.papernet.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw3MSP.admin', 'OrgGw3MSP.peer', 'OrgGw3MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw3MSP.admin', 'OrgGw3MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw3MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw3MSP.peer')"

        # leave this flag set to true.
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.orgGw3.papernet.com
              Port: 9051





    - &OrgGw4
        Name: OrgGw4MSP

        ID: OrgGw4MSP

        MSPDir: crypto-config/peerOrganizations/orgGw4.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw4MSP.admin', 'OrgGw4MSP.peer', 'OrgGw4MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw4MSP.admin', 'OrgGw4MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw4MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw4MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw4.papernet.com
              Port: 16051



    - &OrgGw5
        Name: OrgGw5MSP

        ID: OrgGw5MSP

        MSPDir: crypto-config/peerOrganizations/orgGw5.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw5MSP.admin', 'OrgGw5MSP.peer', 'OrgGw5MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw5MSP.admin', 'OrgGw5MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw5MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw5MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw5.papernet.com
              Port: 17051



    - &OrgGw6
        Name: OrgGw6MSP

        ID: OrgGw6MSP

        MSPDir: crypto-config/peerOrganizations/orgGw6.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw6MSP.admin', 'OrgGw6MSP.peer', 'OrgGw6MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw6MSP.admin', 'OrgGw6MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw6MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw6MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw6.papernet.com
              Port: 18051



    - &OrgGw7
        Name: OrgGw7MSP

        ID: OrgGw7MSP

        MSPDir: crypto-config/peerOrganizations/orgGw7.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw7MSP.admin', 'OrgGw7MSP.peer', 'OrgGw7MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw7MSP.admin', 'OrgGw7MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw7MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw7MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw7.papernet.com
              Port: 19051



    - &OrgGw8
        Name: OrgGw8MSP

        ID: OrgGw8MSP

        MSPDir: crypto-config/peerOrganizations/orgGw8.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw8MSP.admin', 'OrgGw8MSP.peer', 'OrgGw8MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw8MSP.admin', 'OrgGw8MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw8MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw8MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw8.papernet.com
              Port: 20051




    - &OrgGw9
        Name: OrgGw9MSP

        ID: OrgGw9MSP

        MSPDir: crypto-config/peerOrganizations/orgGw9.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw9MSP.admin', 'OrgGw9MSP.peer', 'OrgGw9MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw9MSP.admin', 'OrgGw9MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw9MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw9MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw9.papernet.com
              Port: 21051




    - &OrgGw10
        Name: OrgGw10MSP

        ID: OrgGw10MSP

        MSPDir: crypto-config/peerOrganizations/orgGw10.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgGw10MSP.admin', 'OrgGw10MSP.peer', 'OrgGw10MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgGw10MSP.admin', 'OrgGw10MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgGw10MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgGw10MSP.peer')"

        AnchorPeers:
            - Host: peer0.orgGw10.papernet.com
              Port: 22051




    - &OrgCtrl
        Name: OrgCtrlMSP

        ID: OrgCtrlMSP

        MSPDir: crypto-config/peerOrganizations/orgCtrl.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgCtrlMSP.admin', 'OrgCtrlMSP.peer', 'OrgCtrlMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgCtrlMSP.admin', 'OrgCtrlMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgCtrlMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgCtrlMSP.peer')"

        AnchorPeers:
            - Host: peer0.orgCtrl.papernet.com
              Port: 10051




    - &OrgAgent
        Name: OrgAgentMSP

        ID: OrgAgentMSP

        MSPDir: crypto-config/peerOrganizations/orgAgent.papernet.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgAgentMSP.admin', 'OrgAgentMSP.peer', 'OrgAgentMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrgAgentMSP.admin', 'OrgAgentMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrgAgentMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('OrgAgentMSP.peer')"

        AnchorPeers:
            - Host: peer0.orgAgent.papernet.com
              Port: 11051
#            - Host: peer1.orgAgent.papernet.com
#              Port: 12051
#            - Host: peer2.orgAgent.papernet.com
#              Port: 13051
#            - Host: peer3.orgAgent.papernet.com
#              Port: 14051
#            - Host: peer4.orgAgent.papernet.com
#              Port: 15051








################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    Channel: &ChannelCapabilities
        # Prior to enabling V2.0 channel capabilities, ensure that all
        # orderers and peers on a channel are at v2.0.0 or later.
        V2_0: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    Orderer: &OrdererCapabilities
        # Prior to enabling V2.0 orderer capabilities, ensure that all
        # orderers on channel are at v2.0.0 or later.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    Application: &ApplicationCapabilities
        # Prior to enabling V2.0 application capabilities, ensure that all
        # peers on channel are at v2.0.0 or later.
        V2_0: true


################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
                Type: ImplicitMeta
                Rule: "MAJORITY Endorsement"
        Endorsement:
                Type: ImplicitMeta
                Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer.papernet.com:7050
        - orderer2.papernet.com:8050
        - orderer3.papernet.com:9050
        - orderer4.papernet.com:10050
        - orderer5.papernet.com:11050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 1

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092

    # EtcdRaft defines configuration which must be set when the "etcdraft"
    # orderertype is chosen.
    EtcdRaft:
        # The set of Raft replicas for this network. For the etcd/raft-based
        # implementation, we expect every replica to also be an OSN. Therefore,
        # a subset of the host:port items enumerated in this list should be
        # replicated under the Orderer.Addresses key above.
        Consenters:
        - Host: orderer.papernet.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer.papernet.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer.papernet.com/tls/server.crt
        - Host: orderer2.papernet.com
          Port: 8050
          ClientTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer2.papernet.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer2.papernet.com/tls/server.crt
        - Host: orderer3.papernet.com
          Port: 9050
          ClientTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer3.papernet.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer3.papernet.com/tls/server.crt
        - Host: orderer4.papernet.com
          Port: 10050
          ClientTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer4.papernet.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer4.papernet.com/tls/server.crt
        - Host: orderer5.papernet.com
          Port: 11050
          ClientTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer5.papernet.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/papernet.com/orderers/orderer5.papernet.com/tls/server.crt


        # Options to be specified for all the etcd/raft nodes. The values here
        # are the defaults for all new channels and can be modified on a
        # per-channel basis via configuration updates.
        Options:
            # TickInterval is the time interval between two Node.Tick invocations.
            TickInterval: 500ms

            # ElectionTick is the number of Node.Tick invocations that must pass
            # between elections. That is, if a follower does not receive any
            # message from the leader of current term before ElectionTick has
            # elapsed, it will become candidate and start an election.
            # ElectionTick must be greater than HeartbeatTick.
            ElectionTick: 10

            # HeartbeatTick is the number of Node.Tick invocations that must
            # pass between heartbeats. That is, a leader sends heartbeat
            # messages to maintain its leadership every HeartbeatTick ticks.
            HeartbeatTick: 1

            # MaxInflightBlocks limits the max number of in-flight append messages
            # during optimistic replication phase.
            MaxInflightBlocks: 5

            # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
            SnapshotIntervalSize: 16 MB


    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:


    OrgsChannelGw:
        Consortium: Consortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *OrgGw1
                - *OrgGw2
                - *OrgGw3
                - *OrgGw4
                - *OrgGw5
                - *OrgGw6
                - *OrgGw7
                - *OrgGw8
                - *OrgGw9
                - *OrgGw10
                - *OrgCtrl
            Capabilities:
                <<: *ApplicationCapabilities


    OrgsSubChannel1:
        Consortium: Consortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *OrgAgent
                - *OrgGw1
                - *OrgCtrl
            Capabilities:
                <<: *ApplicationCapabilities


    MultiNodeEtcdRaft:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
        Consortiums:
            Consortium:
                Organizations:
                - *OrgCtrl
                - *OrgAgent
                - *OrgGw1
                - *OrgGw2
                - *OrgGw3
                - *OrgGw4
                - *OrgGw5
                - *OrgGw6
                - *OrgGw7
                - *OrgGw8
                - *OrgGw9
                - *OrgGw10


